"use strict";window.onload=(()=>{shop.init(15,1),selects.init()});const shop={async init(t,e){this.total=t,this.page=e,await this.data(),await this.getStorage(),this.catcheDOM(),await this.pagination(),await this.render(this.chairs),bucket.init(),this.bindEvents()},async data(){return fetch("https://api.jsonbin.io/b/5e61923fbaf60366f0e44351/1").then(t=>t.json()).then(t=>{this.chairs=t}).catch(t=>{throw t})},catcheDOM(){this.$selects=document.querySelectorAll("select"),this.$list=document.querySelector(".store-list"),this.$pagination=document.querySelector(".pagination")},getStorage(){localStorage.length>0&&(this.storage=JSON.parse(localStorage.getItem("goods")),this.storage&&this.renderStorage(this.storage))},renderStorage(t){this.goods=t,this.bindGoods(t)},bindGoods(t){const e=this.chairs;this.bucket=[],t.forEach(t=>{const i=e.find(e=>e.id==t.id);i.count=t.count,this.bucket.push(i)})},bindEvents(){this.$pagination.addEventListener("click",t=>this.changePage(t.target)),this.$list.addEventListener("click",t=>this.clickHandler(t.target))},clickHandler(t){switch(t.classList[0]){case"item-button":this.addGood(t)}},async addGood(t){let e=t.parentNode.parentNode.parentNode.getAttribute("data-id"),i=1;this.goods?this.goods.forEach((t,s,a)=>{if(t.id==e)return t.count++,void(i=t.count);s===a.length-1&&a.push({id:e,count:i})}):this.goods=[{id:e,count:i}];const s=JSON.stringify(this.goods);localStorage.setItem("goods",s),t.classList.add("active"),t.innerHTML=`Добавить (${i})`,await this.bindGoods(this.goods),bucket.render(this.bucket)},deleteGoods(t,e){this.goods=t;let i=[];if(t){t.forEach(t=>{i.push({id:t.id,count:t.count})}),this.storage=i;const e=JSON.stringify(i);localStorage.setItem("goods",e)}else localStorage.clear();this.$list.querySelector(`[data-id="${e}"]`)&&(this.$list.querySelector(`[data-id="${e}"]`).querySelector(".item-button").innerHTML="Добавить")},changePage(t){this.page=parseInt(t.getAttribute("data-page")),this.pagination(this.filtered||this.chairs),this.render(this.filtered||this.chairs)},pagination(){const t=Math.ceil(this.chairs.length/this.total),e=this.$pagination;e.innerHTML="";let i=1,s=5;this.page>2?this.page<t-1?(i=this.page-2,s=this.page+2):this.page>=t-1&&(i=this.page-3,s=this.page+2,this.page===t&&(i=this.page-4)):this.page>1?(i=this.page-1,s=this.page+3):(i=this.page,s=this.page+4);for(let a=i;a<=t;a+1){const t=a===this.page?"active":"";if(!(a>=i&&a<=s))break;{const i=`<li data-page="${a}" class="${t}">${a++}</li>`;e.insertAdjacentHTML("beforeEnd",i)}}},async filter({by:t,have:e}){let i=this.chairs;i=t?this.filterBy(i,t):i,i=e?this.filterHave(i,e):i,this.filtered=i,this.render(i),this.pagination(i)},filterBy:(t,e)=>t.sort((t,i)=>t[e]>i[e]?1:-1),filterHave(t,e){const i="have"===e;return t.filter(t=>t.avaible===i)},render(t){const e=this.page*this.total,i=e-this.total,s=this.$list;s.innerHTML="",t.forEach((t,a)=>{if(a>=i&&a<e){const e=t.count?`(${t.count})`:"",i=t.avaible?"":'<div class="item__avaible yes">Нет в наличии</div>',a=`\n                <article class="item" data-id="${t.id}">\n                <div class="item-container">\n                <div class="item__header" style="background-image: url('${t.image}');"></div>\n                <div class="item__title">${t.name}</div>\n                <div class="item__desc">${t.description}</div>\n                ${i}\n                <div class="item-wrap">\n                <div class="item-price">${t.price} р.</div>\n                <div class="item-button">Добавить ${e}</div>\n                </div>\n                </div>\n                </article>`;s.insertAdjacentHTML("beforeEnd",a)}})}};let selects={init(){this.catcheDOM(),this.bindEvents()},catcheDOM(){this.$selects=document.querySelector(".selects")},bindEvents(){this.$selects.addEventListener("click",t=>this.clickHandler(t.target))},clickHandler(t){switch(t.tagName){case"DIV":t.classList.toggle("active");break;case"LI":this.changeFilters(t)}},changeFilters(t){const e=t.innerHTML,i=t.parentNode,s=i.parentNode.getAttribute("data-select"),a=t.getAttribute("data");t.parentNode.parentNode.classList.toggle("active"),i.previousElementSibling.childNodes[1].innerHTML=e,"filter-by"===s?this.filters.by=a:this.filters.have=a,shop.filter(this.filters)}},bucket={init(){this.catcheDOM(),this.bindEvents(),this.render(shop.bucket)},catcheDOM(){this.$cart=document.querySelector(".store-cart"),this.$bucket=document.querySelector(".bucket")},bindEvents(){this.$cart.addEventListener("click",t=>this.clickHandler(t.target))},clickHandler(t){switch(t.classList[0]){case"store-cart":t.classList.toggle("active");break;case"bucket-item__delete":this.deleteGoods(t)}},async deleteGoods(t){const e=t.parentNode.getAttribute("data-id");let i=this.goods;const s=i.find(t=>t.id===parseInt(e));await i.splice(i.indexOf(s),1),this.goods=0===i.length?null:i,shop.deleteGoods(this.goods,e),this.render(this.goods)},render(t){const e=this.$cart.querySelector(".store-cart__counter"),i=this.$bucket;if(this.goods=t,i.innerHTML="",t){e.innerHTML=t.length;let s=0;t.forEach((t,e,a)=>{const n=0===e?'<ul class="bucket-list">':"",c=e===a.length-1?"</ul>":"",o=`\n                    ${n}\n                    <li class="bucket-item" data-id="${t.id}">\n                        <div class="bucket-item__image" style="background-image: url('${t.image}');"></div>\n                        <div class="bucket-wrap">\n                            <div class="bucket-item__title">${t.name}</div>\n                            <div class="bucket-item__count">Количество: <span>${t.count}</span>\n                            </div>\n                        </div>\n                        <div class="bucket-item__delete">\n                            <img src="assets/images/icon_close.svg">\n                        </div>\n                    </li>\n                    ${c}\n                `;i.insertAdjacentHTML("beforeEnd",o),s+=parseInt(t.price)*parseInt(t.count)});const a=`\n            <div class="bucket-footer">\n                <p class="bucket-footer__title">Сумма товаров: </p>\n                <p class="bucket-footer__price">${s} р.</p>\n            </div>`;i.insertAdjacentHTML("beforeEnd",a)}else{const t='<p class="bucket__empty">Добавьте товары в корзину</p>';i.insertAdjacentHTML("beforeEnd",t),e.innerHTML="0"}}};